def f(x, y):
    if x > y or x == 17:
        return 0
    elif x == y:
        return 1
    return f(x + 1, y) + f(x * 2, y)


print(f(1, 10) * f(10, 35))
# не содержит 17
# содержит 10
# начало 1
# результат 35
----------------------------------

s = set()
def f(a, k):
    if k > 13:
        return 0
    if k == 13:
        if a < 0:
            s.add(a)
    if k < 13:
        f(a - 3, k + 1)
        f(-3 * a, k+ 1)
f(333, 0)
print(len(s))
_____________________________________
#Исполнитель Калькулятор преобразует число, записанно У исполнителя есть три команды, которым присвоены померла А. Прибавить Б. Прибавить 3. С. Умножить на 2 и прибавить 1.
Первая команда увеличивает на 2, вторая увеличивает на 3, третья - умножает на 2 и увеличивает на 1. Сколько существует таких программ, которые исходное число 1 преобразуют в число 625, и при этом траектория содержит не более 4-х нечётных чисел.
#
from functools impoct Iru_cache
@lru cache(None)
def F(a,b,k):
     if a>b or k>4:
         return 0
     if a = b and k = 4:
         return 1
     if a < b:
       if a % 2 != 0:
          return f(a<2,b, k=1)+f (a*2+1, b, krl) +f (a+3,b, k+1)
       else:
          return f(a+2, b, k) + f (a*2+1,b, k) +1 (a+3,b, k)
print(f (1,625,1)) 
